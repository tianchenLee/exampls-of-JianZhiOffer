# RBTree.py
"""1、rbtree前置概念：
		a. 红黑树是一种在每个节点上增加一个存储位置表示节点颜色的二叉查找树，节点上的颜色可以是红色或者黑色，因为颜色的限制使得没有一条路径的长度会是别的路径的两倍，所以是接近平衡的。
		b. 二叉查找树也称有序二叉树，或排序二叉树，它是一颗空树或者一颗这样的树：对于任意节点来说，lchild.val<cur.val<rchild.val；由于一棵n个结点的二叉查找树的高度为lgn，所以其操作的执行时间一般是O(lgn)。但是当其退化为具有n个结点的线性链之后，这些操作的运行的最坏的时间复杂度就为O(n).
		c. rbtree由于各个节点存在颜色的性质，所以其增删改查的最坏时间复杂度为O(lgn)
	2、rbtree的性质
		a. 任意结点为红色或者黑色；
		b. 根节点是黑色的；
		c. 每个叶子节点（这里指的是null节点）都是黑色的；
		d. 红色节点的子节点必定为黑；
		e. 对于任意节点而言，其到叶节点nil指针的每条路径都包含相同数目的黑节点（包含null节点）。
	3、rbtree的操作
		a. 旋转操作：
			左旋：节点变为右孩子的左孩子
			右旋：节点变为左孩子的右孩子
"""